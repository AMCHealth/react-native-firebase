name: Build

on: [pull_request]

jobs:
  # ------------------
  #      Android
  # ------------------
  build_android:
    name: Android App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        name: Yarn Cache
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v1
        name: Gradle Cache
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Yarn Install
        run: yarn --no-audit --prefer-offline
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build Android App
        run: cd tests/android && ./gradlew assembleDebug assembleAndroidTest -DtestBuildType=debug -Dorg.gradle.daemon=false
      - name: Upload App
        uses: actions/upload-artifact@v1
        with:
          name: android_app
          path: tests/android/app/build/outputs/apk/debug/app-debug.apk

  # ------------------
  #        iOS
  # ------------------
  build_ios:
    name: iOS App
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      # Use the latest version of xcode for rnfirebase
      # See link below for available versions;
      #  -> https://github.com/actions/virtual-environments/blob/master/images/macos/macos-10.15-Readme.md#xcode
      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_11.4.app
      # Yarn cache directory on macOS GH Action virtual environment isn't empty;
      #  -> https://github.com/actions/virtual-environments/issues/427
      #  -> https://github.com/actions/cache/issues/187
      - name: Clean Yarn cache directory
        run: yarn cache clean
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        name: Yarn Cache
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v1
        name: Cache Pods
        with:
          path: ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Yarn Install
        run: yarn --no-audit --prefer-offline
      - name: Pod Install
        run: |
          cd tests/ios
          pod install
        shell: bash
      - name: Build iOS App
        run: |
          export SKIP_BUNDLING=1
          export RCT_NO_LAUNCH_PACKAGER=1
          cd tests
          ./node_modules/.bin/detox build --configuration ios.ci
        shell: bash
      - name: Upload App
        uses: actions/upload-artifact@v1
        with:
          name: ios_app
          path: tests/ios/build/Build/Products/Debug-iphonesimulator/testing.app
